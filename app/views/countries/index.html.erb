<div id='map' class="vh-100 vw-100"></div>
<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoidGdhZmZlciIsImEiOiJjbGlrNTVibWEwOHRkM2NwOWF6Y3VvMHFrIn0.UxOvJ3__02GQNNAEkRhF7w';
const map = new mapboxgl.Map({
container: 'map', // container ID
// Choose from Mapbox's core styles, or make your own style with Mapbox Studio
style: 'mapbox://styles/tgaffer/clkxrp2iy003101pubmth6km3', // style URL
center: [0, 0], // starting position [lng, lat]
zoom: 1,
projection: {
  name: 'mercator',
  center: [0, 0],
}
  });

map.on('load', function () {
            map.addSource('cbs', {  // country-boundaries-simplified
                'type': 'geojson',
                'data': 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_countries.geojson'
            });

            map.addLayer({
                "id": "cf",  // country-fills
                "type": "fill",
                "source": "cbs",
                "layout": {},
                "paint": {
                    "fill-color": "#627BC1",
                    "fill-opacity": 0.5
                }
            });

            map.addLayer({
                "id": "cb",  // country borders
                "type": "line",
                "source": "cbs",
                "layout": {},
                "paint": {
                    "line-color": "#627BC1",
                    "line-width": 2
                }
            });

            map.addLayer({
                "id": "cfh",  // country-fills-hover",
                "type": "fill",
                "source": "cbs",
                "layout": {},
                "paint": {
                    "fill-color": "#FFFFFF",
                    "fill-opacity": 1
                },
                "filter": ["==", "name", ""]
            });

            // When the user moves their mouse over the page, we look for features
            // at the mouse position (e.point) and within the states layer (states-fill).
            // If a feature is found, then we'll update the filter in the state-fills-hover
            // layer to only show that state, thus making a hover effect.
            map.on("mousemove", function(e) {
                var features = map.queryRenderedFeatures(e.point, { layers: ["cf"] });

                if (features.length) {
                    map.getCanvas().style.cursor = 'pointer';
                    map.setFilter("cfh", ["==", "name", features[0].properties.name]);
                    } else {
                    map.setFilter("cfh", ["==", "name", ""]);
                    map.getCanvas().style.cursor = '';
                }
            });

            // Reset the state-fills-hover layer's filter when the mouse leaves the map
            map.on("mouseout", function() {
                map.getCanvas().style.cursor = 'auto';
                map.setFilter("cfh", ["==", "name", ""]);
            });

            map.on("click", function(e) {
                var features = map.queryRenderedFeatures(e.point, { layers: ["cf"] });
                if (features.length) {
                    console.log(e, features[0].properties.name);
                }
            });

        });
</script>
